<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.com.project.data.dao.business.ProContractMapper">
  <resultMap id="BaseResultMap" type="cn.com.project.data.model.business.ProContract">
    <id column="cid" jdbcType="VARCHAR" property="cid" />
    <result column="oid" jdbcType="VARCHAR" property="oid" />
    <result column="cno" jdbcType="VARCHAR" property="cno" />
    <result column="cname" jdbcType="VARCHAR" property="cname" />
    <result column="pname" jdbcType="VARCHAR" property="pname" />
    <result column="amount" jdbcType="DECIMAL" property="amount" />
    <result column="partyA" jdbcType="VARCHAR" property="partya" />
    <result column="partyB" jdbcType="VARCHAR" property="partyb" />
    <result column="partyU" jdbcType="VARCHAR" property="partyu" />
    <result column="partyZ" jdbcType="VARCHAR" property="partyz" />
    <result column="treatyBZ" jdbcType="VARCHAR" property="treatybz" />
    <result column="sign_date" jdbcType="VARCHAR" property="signDate" />
    <result column="delivery_date" jdbcType="VARCHAR" property="deliveryDate" />
    <result column="description" jdbcType="VARCHAR" property="description" />
    <result column="remark" jdbcType="VARCHAR" property="remark" />
    <result column="invoice_date" jdbcType="VARCHAR" property="invoiceDate" />
    <result column="invoice_amount" jdbcType="DECIMAL" property="invoiceAmount" />
    <result column="annex_name" jdbcType="VARCHAR" property="annexName" />
    <result column="annex_path" jdbcType="VARCHAR" property="annexPath" />
    <result column="ctime" jdbcType="TIMESTAMP" property="ctime" />
    <result column="utime" jdbcType="TIMESTAMP" property="utime" />
  </resultMap>
  <resultMap id="ResultMap_sub" extends="BaseResultMap" type="cn.com.project.data.model.business.ProContract">
    <collection property="payments" column="cid" select="cn.com.project.data.dao.business.ProContractPaymentMapper.selectByCid"></collection>
  </resultMap>
  <sql id="Base_Column_List">
    cid, oid, cno, cname, pname, amount, partyA, partyB, partyU, partyZ, treatyBZ, sign_date, 
    delivery_date, description, remark, invoice_date, invoice_amount, annex_name, annex_path, 
    ctime, `status`
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from pro_contract
    where cid = #{cid,jdbcType=VARCHAR}
  </select>
  <select id="selectDetail" parameterType="java.lang.String" resultMap="ResultMap_sub">
    select
    <include refid="Base_Column_List" />
    from pro_contract
    where cid = #{cid,jdbcType=VARCHAR}
  </select>
  <select id="selectByOid" parameterType="java.lang.String" resultMap="ResultMap_sub">
    select
    <include refid="Base_Column_List" />
    from pro_contract
    where oid = #{oid,jdbcType=VARCHAR}
  </select>
  <select id="selectByAnnexId" parameterType="java.lang.String" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from pro_contract
    where annex_path = #{annexId,jdbcType=VARCHAR}
  </select>
  <select id="selectByCondition" resultMap="ResultMap_sub">
    <!--select
    <include refid="Base_Column_List" />
    from pro_contract-->
    select c.*
    from pro_contract c
    left join (select cid,min(expected_date) expected_date from pro_contract_payment where pay_amount is null and (pay_date is null or pay_date = '')
    group by cid) p
    on c.cid=p.cid
    <where>
      <if test="oid != null and ''.toString() != oid">
        and oid = #{oid,jdbcType=VARCHAR}
      </if>
      <if test="cno != null and ''.toString() != cno">
        and cno like concat('%', #{cno,jdbcType=VARCHAR}, '%')
      </if>
      <if test="cname != null and ''.toString() != cname">
        and cname like concat('%', #{cname,jdbcType=VARCHAR}, '%')
      </if>
      <if test="pname != null and ''.toString() != pname">
        and pname like concat('%', #{pname,jdbcType=VARCHAR}, '%')
      </if>
      <if test="partya != null and ''.toString() != partya">
        and partyA = #{partya,jdbcType=VARCHAR}
      </if>
      <if test="partyb != null and ''.toString() != partyb">
        and partyB = #{partyb,jdbcType=VARCHAR}
      </if>
      <if test="partyu != null and ''.toString() != partyu">
        and partyU = #{partyu,jdbcType=VARCHAR}
      </if>
      <if test="partyz != null and ''.toString() != partyz">
        and partyZ = #{partyz,jdbcType=VARCHAR}
      </if>
      <if test="isInvoice != null and '0'.toString() == isInvoice">
        and (invoice_amount is null or invoice_amount = '')
      </if>
      <if test="isInvoice != null and '1'.toString() == isInvoice">
        and (invoice_amount is not null and invoice_amount != '')
      </if>
      <if test="signTimeb != null and ''.toString() != signTimeb">
        and sign_date &gt;= #{signTimeb,jdbcType=VARCHAR}
      </if>
      <if test="signTimee != null and ''.toString() != signTimee">
        and sign_date &lt;= #{signTimee,jdbcType=VARCHAR}
      </if>
      <if test="deliveryTimeb != null and ''.toString() != deliveryTimeb">
        and delivery_date &gt;= #{deliveryTimeb,jdbcType=VARCHAR}
      </if>
      <if test="deliveryTimee != null and ''.toString() != deliveryTimee">
        and delivery_date &lt;= #{deliveryTimee,jdbcType=VARCHAR}
      </if>
      <if test="expectedTimeb != null and ''.toString() != expectedTimeb">
        and p.expected_date &gt;= #{expectedTimeb,jdbcType=VARCHAR}
        <!--and cid in (select cid from pro_contract_payment where pay_amount is null and (pay_date is null or pay_date = '')
        and expected_date &gt;= #{expectedTimeb,jdbcType=VARCHAR}
        group by cid)-->
      </if>
      <if test="expectedTimee != null and ''.toString() != expectedTimee">
        and p.expected_date &lt;= #{expectedTimee,jdbcType=VARCHAR}
        <!--and cid in (select cid from pro_contract_payment where pay_amount is null and (pay_date is null or pay_date = '')
        and expected_date &lt;= #{expectedTimee,jdbcType=VARCHAR}
        group by cid)-->
      </if>
    </where>
    order by sign_date desc
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from pro_contract
    where cid = #{cid,jdbcType=VARCHAR}
  </delete>
  <insert id="insert" parameterType="cn.com.project.data.model.business.ProContract">
    insert into pro_contract (cid, oid, cno, 
      cname, pname, amount, 
      partyA, partyB, partyU, 
      partyZ, treatyBZ, sign_date, 
      delivery_date, description, remark, 
      invoice_date, invoice_amount, annex_name, 
      annex_path
      )
    values (#{cid,jdbcType=VARCHAR}, #{oid,jdbcType=VARCHAR}, #{cno,jdbcType=VARCHAR}, 
      #{cname,jdbcType=VARCHAR}, #{pname,jdbcType=VARCHAR}, #{amount,jdbcType=DECIMAL}, 
      #{partya,jdbcType=VARCHAR}, #{partyb,jdbcType=VARCHAR}, #{partyu,jdbcType=VARCHAR}, 
      #{partyz,jdbcType=VARCHAR}, #{treatybz,jdbcType=VARCHAR}, #{signDate,jdbcType=VARCHAR}, 
      #{deliveryDate,jdbcType=VARCHAR}, #{description,jdbcType=VARCHAR}, #{remark,jdbcType=VARCHAR}, 
      #{invoiceDate,jdbcType=VARCHAR}, #{invoiceAmount,jdbcType=DECIMAL}, #{annexName,jdbcType=VARCHAR}, 
      #{annexPath,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="cn.com.project.data.model.business.ProContract">
    insert into pro_contract
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="cid != null">
        cid,
      </if>
      <if test="oid != null">
        oid,
      </if>
      <if test="cno != null">
        cno,
      </if>
      <if test="cname != null">
        cname,
      </if>
      <if test="pname != null">
        pname,
      </if>
      <if test="amount != null">
        amount,
      </if>
      <if test="partya != null">
        partyA,
      </if>
      <if test="partyb != null">
        partyB,
      </if>
      <if test="partyu != null">
        partyU,
      </if>
      <if test="partyz != null">
        partyZ,
      </if>
      <if test="treatybz != null">
        treatyBZ,
      </if>
      <if test="signDate != null">
        sign_date,
      </if>
      <if test="deliveryDate != null">
        delivery_date,
      </if>
      <if test="description != null">
        description,
      </if>
      <if test="remark != null">
        remark,
      </if>
      <if test="invoiceDate != null">
        invoice_date,
      </if>
      <if test="invoiceAmount != null">
        invoice_amount,
      </if>
      <if test="annexName != null">
        annex_name,
      </if>
      <if test="annexPath != null">
        annex_path,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="cid != null">
        #{cid,jdbcType=VARCHAR},
      </if>
      <if test="oid != null">
        #{oid,jdbcType=VARCHAR},
      </if>
      <if test="cno != null">
        #{cno,jdbcType=VARCHAR},
      </if>
      <if test="cname != null">
        #{cname,jdbcType=VARCHAR},
      </if>
      <if test="pname != null">
        #{pname,jdbcType=VARCHAR},
      </if>
      <if test="amount != null">
        #{amount,jdbcType=DECIMAL},
      </if>
      <if test="partya != null">
        #{partya,jdbcType=VARCHAR},
      </if>
      <if test="partyb != null">
        #{partyb,jdbcType=VARCHAR},
      </if>
      <if test="partyu != null">
        #{partyu,jdbcType=VARCHAR},
      </if>
      <if test="partyz != null">
        #{partyz,jdbcType=VARCHAR},
      </if>
      <if test="treatybz != null">
        #{treatybz,jdbcType=VARCHAR},
      </if>
      <if test="signDate != null">
        #{signDate,jdbcType=VARCHAR},
      </if>
      <if test="deliveryDate != null">
        #{deliveryDate,jdbcType=VARCHAR},
      </if>
      <if test="description != null">
        #{description,jdbcType=VARCHAR},
      </if>
      <if test="remark != null">
        #{remark,jdbcType=VARCHAR},
      </if>
      <if test="invoiceDate != null">
        #{invoiceDate,jdbcType=VARCHAR},
      </if>
      <if test="invoiceAmount != null">
        #{invoiceAmount,jdbcType=DECIMAL},
      </if>
      <if test="annexName != null">
        #{annexName,jdbcType=VARCHAR},
      </if>
      <if test="annexPath != null">
        #{annexPath,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="cn.com.project.data.model.business.ProContract">
    update pro_contract
    <set>
      <if test="oid != null">
        oid = #{oid,jdbcType=VARCHAR},
      </if>
      <if test="cno != null">
        cno = #{cno,jdbcType=VARCHAR},
      </if>
      <if test="cname != null">
        cname = #{cname,jdbcType=VARCHAR},
      </if>
      <if test="pname != null">
        pname = #{pname,jdbcType=VARCHAR},
      </if>
      <if test="amount != null">
        amount = #{amount,jdbcType=DECIMAL},
      </if>
      <if test="partya != null">
        partyA = #{partya,jdbcType=VARCHAR},
      </if>
      <if test="partyb != null">
        partyB = #{partyb,jdbcType=VARCHAR},
      </if>
      <if test="partyu != null">
        partyU = #{partyu,jdbcType=VARCHAR},
      </if>
      <if test="partyz != null">
        partyZ = #{partyz,jdbcType=VARCHAR},
      </if>
      <if test="treatybz != null">
        treatyBZ = #{treatybz,jdbcType=VARCHAR},
      </if>
      <if test="signDate != null">
        sign_date = #{signDate,jdbcType=VARCHAR},
      </if>
      <if test="deliveryDate != null">
        delivery_date = #{deliveryDate,jdbcType=VARCHAR},
      </if>
      <if test="description != null">
        description = #{description,jdbcType=VARCHAR},
      </if>
      <if test="remark != null">
        remark = #{remark,jdbcType=VARCHAR},
      </if>
      <if test="invoiceDate != null">
        invoice_date = #{invoiceDate,jdbcType=VARCHAR},
      </if>
      <if test="invoiceAmount != null">
        invoice_amount = #{invoiceAmount,jdbcType=DECIMAL},
      </if>
      <if test="annexName != null">
        annex_name = #{annexName,jdbcType=VARCHAR},
      </if>
      <if test="annexPath != null">
        annex_path = #{annexPath,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        `status` = #{status,jdbcType=VARCHAR},
      </if>
    </set>
    where cid = #{cid,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="cn.com.project.data.model.business.ProContract">
    update pro_contract
    set cno = #{cno,jdbcType=VARCHAR},
      cname = #{cname,jdbcType=VARCHAR},
      pname = #{pname,jdbcType=VARCHAR},
      amount = #{amount,jdbcType=DECIMAL},
      partyA = #{partya,jdbcType=VARCHAR},
      partyB = #{partyb,jdbcType=VARCHAR},
      partyU = #{partyu,jdbcType=VARCHAR},
      partyZ = #{partyz,jdbcType=VARCHAR},
      treatyBZ = #{treatybz,jdbcType=VARCHAR},
      sign_date = #{signDate,jdbcType=VARCHAR},
      delivery_date = #{deliveryDate,jdbcType=VARCHAR},
      description = #{description,jdbcType=VARCHAR},
      remark = #{remark,jdbcType=VARCHAR},
      invoice_date = #{invoiceDate,jdbcType=VARCHAR},
      invoice_amount = #{invoiceAmount,jdbcType=DECIMAL},
      annex_name = #{annexName,jdbcType=VARCHAR},
      annex_path = #{annexPath,jdbcType=VARCHAR}
    where cid = #{cid,jdbcType=VARCHAR}
  </update>
</mapper>