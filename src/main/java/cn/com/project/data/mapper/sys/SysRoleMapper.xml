<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.com.project.data.dao.sys.SysRoleMapper">
  <resultMap id="BaseResultMap" type="cn.com.project.data.model.sys.SysRole">
    <id column="rid" jdbcType="VARCHAR" property="rid" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="state" jdbcType="TINYINT" property="state" />
    <result column="remark" jdbcType="VARCHAR" property="remark" />
  </resultMap>
  <sql id="Base_Column_List">
    rid, `name`, `state`, remark
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from sys_role
    where rid = #{rid,jdbcType=VARCHAR}
  </select>
  <select id="selectByCondition" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from sys_role
    <where>
      name != '超级管理员'
      <if test="name != null and ''.toString() != name">
        and name like concat('%,#{name,jdbcType=VARCHAR},'%')
      </if>
      <if test="state != null">
        and `state` = #{state,jdbcType=TINYINT}
      </if>
    </where>
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from sys_role
    where rid = #{rid,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteRelationByUser" parameterType="java.lang.String">
    delete from sys_user_role
    where uid = #{uid,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteRelationByRole" parameterType="java.lang.String">
    delete from sys_user_role
    where rid = #{rid,jdbcType=VARCHAR}
  </delete>
  <insert id="insertRelationBatch">
    insert into sys_user_role (rid, uid)
    values
    <foreach collection="list" item="item" index="index" separator="," >
      (#{item.rid,jdbcType=VARCHAR}, #{item.uid,jdbcType=VARCHAR})
    </foreach>
  </insert>
  <insert id="insert" parameterType="cn.com.project.data.model.sys.SysRole">
    insert into sys_role (rid, `name`, `state`, 
      remark)
    values (#{rid,jdbcType=VARCHAR}, #{name,jdbcType=VARCHAR}, #{state,jdbcType=TINYINT}, 
      #{remark,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="cn.com.project.data.model.sys.SysRole">
    insert into sys_role
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="rid != null">
        rid,
      </if>
      <if test="name != null">
        `name`,
      </if>
      <if test="state != null">
        `state`,
      </if>
      <if test="remark != null">
        remark,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="rid != null">
        #{rid,jdbcType=VARCHAR},
      </if>
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="state != null">
        #{state,jdbcType=TINYINT},
      </if>
      <if test="remark != null">
        #{remark,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="cn.com.project.data.model.sys.SysRole">
    update sys_role
    <set>
      <if test="name != null">
        `name` = #{name,jdbcType=VARCHAR},
      </if>
      <if test="state != null">
        `state` = #{state,jdbcType=TINYINT},
      </if>
      <if test="remark != null">
        remark = #{remark,jdbcType=VARCHAR},
      </if>
    </set>
    where rid = #{rid,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="cn.com.project.data.model.sys.SysRole">
    update sys_role
    set `name` = #{name,jdbcType=VARCHAR},
      remark = #{remark,jdbcType=VARCHAR}
    where rid = #{rid,jdbcType=VARCHAR}
  </update>
</mapper>